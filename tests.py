import unittest

from firstSpecies import allPossibleMoves, getAllNextMoves, getAllPossibleCpts

testLowerCf = {
  "a": [0, 4, 9, 5, 7, 0],
  "b": [0, 2, 5, 4, 0, 2, 7, 5, 0],
  "c": [0, 5, 4, 9, 7, 12, 11, 7, 5, 0, 2, 0],
  "d": [0, 4, 2, 5, 4, 7, 5, 9, 7, 11, 9, 12, 11, 12],
  "e": [0, 2, 4, 5, 7, 9, 11, 12, 11, 9, 7, 5, 4, 2, 0],
  "f": [0, 2, 7, 5, 7, 11, 9, 4, 5, 2, 4, 5, 5, 2, 4, 0],
}

testHigherCf = {
  "a": [12, 9, 4, 7, 5, 12],
  "b": [12, 11, 7, 9, 11, 12],
  "c": [12, 11, 9, 7, 5, 4, 2, 0],
  "d": [12, 11, 7, 9, 12, 11, 5, 7, 12],
  "e": [12, 9, 11, 12, 7, 9, 5, 7, 9, 11, 12],
  "f": [12, 7, 9, 4, 5, 0, 2, 5, 7, 12, 11, 12],
  "g": [12, 9, 11, 7, 9, 5, 7, 4, 5, 2, 4, 0, 2, 0],
  "h": [12, 11, 9, 7, 5, 4, 2, 0, 2, 4, 5, 7, 9, 11, 12],
  "i": [12, 11, 5, 7, 5, 2, 4, 9, 7, 11, 9, 7, 7, 11, 9, 12],
}

class nextDict(unittest.TestCase):
  def test_nextDict(self):
    input = {
      'moves': [[0,12]],
      '[0, 12]': [[[0,12]]],
    }

    expected = {
      'moves': [[2, 11],[2, 9],[2, 17],[2, 5]],
      '[2, 11]': [[[0, 12],[2, 11]]],
      '[2, 17]': [[[0, 12],[2, 17]]],
      '[2, 9]': [[[0, 12], [2, 9]]],
      '[2, 5]': [[[0, 12], [2, 5]]]
    }
    actual = getAllNextMoves(input, 2)
    self.assertEqual(expected, actual)



if __name__ == '__main__':
  unittest.main()


